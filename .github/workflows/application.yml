name: 'Application'
"on":
  push:
    branches:
      - main

jobs:
  npm-build:
    runs-on: ubuntu-latest
    env:
       working-directory: ./services/frontend
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: NPM install step
        run: |
          npm install
        working-directory: ${{env.working-directory}}

      - name: Version
        uses: paulhatch/semantic-version@v5.3.0
        id: semantic
        with:
          tag_prefix: "v"
          version_format: "${major}.${minor}.${patch}"
          major_pattern: "(MAJOR)"
          major_regexp_flags: "feat(.*)"
          minor_pattern: "(MINOR)"
          minor_regexp_flags: "perf(.*)"
          debug: false
          bump_each_commit: false

      - name: Print Diagnostic Output
        run: echo "$DEBUG_OUTPUT"
        env:
          DEBUG_OUTPUT: ${{ steps.semantic.outputs.debug_output }}

      - name: Set TAGS
        id: sha_and_tag
        run: |
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "git_tag=v${{ steps.semantic.outputs.version }}" >> $GITHUB_OUTPUT
          echo "git_version_tag=${{ steps.semantic.outputs.version_tag }}" >> $GITHUB_OUTPUT

      - name: Tar artifact files
        run: |
          tar -czvf application.tar.gz services/frontend/*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: application.tar.gz
          retention-days: 5

    outputs:
      sha: ${{ steps.sha_and_tag.outputs.sha }}
      sha_short: ${{ steps.sha_and_tag.outputs.sha_short }}
      git_tag: ${{ steps.sha_and_tag.outputs.git_tag }}

  docker-build:
    runs-on: ubuntu-latest
    needs: npm-build
    env:
      working-directory: .
      GIT_COMMIT: ${{ needs.npm-build.outputs.sha }}
      GIT_COMMIT_SHORT: ${{ needs.npm-build.outputs.sha_short }}
      IMAGE_GIT_TAG: ${{ needs.npm-build.outputs.git_tag }}
    permissions:
      packages: write
      contents: read
    steps:
      - name: Download a NPM artifact
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Tar artifact files
        run: tar -xf application.tar.gz && rm application.tar.gz

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build and push Docker image. Version: ${{ env.IMAGE_TAG }}"
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: services/frontend
          file: services/frontend/Dockerfile
          push: true
          tags: |
            docker.pkg.github.com/${{ github.repository }}/frontend:latest
            docker.pkg.github.com/${{ github.repository }}/frontend:${{ env.GIT_COMMIT }}
            docker.pkg.github.com/${{ github.repository }}/frontend:${{ env.IMAGE_GIT_TAG }}-${{ env.GIT_COMMIT_SHORT }}
            docker.pkg.github.com/${{ github.repository }}/frontend:${{ env.IMAGE_GIT_TAG }}
